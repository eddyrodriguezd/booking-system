Version: 3

APPLICATION_SETTINGS: &APPLICATION_SETTINGS
  Application: booking
  Module: api

LAMBDA_PARAMETERS: &LAMBDA_PARAMETERS
  LambdaFunctionMemorySize: 256
  LambdaFunctionTimeout: 20
  LambdaZipS3Bucket: booking-zip-files

Blueprints:
  lambda-service:
    Region: us-east-1
    Template: ./templates/lambda-service.yaml
    StackPolicy: ALLOW_ALL
    Capabilities: [CAPABILITY_IAM, CAPABILITY_NAMED_IAM]
    Package: true
    Parameters:
      <<: *APPLICATION_SETTINGS
      <<: *LAMBDA_PARAMETERS

Stages:
  test:
    lambda-get-hotels-and-rooms:
      Extends: lambda-service
      StackName: get-hotels-and-rooms-function
      Parameters:
        Environment: test
        LambdaName: get-hotels-and-rooms
        LambdaHandler: "com.test.booking.api.entrypoints.GetHotelsHandler::handleRequest"
        LambdaZipS3Key: hotels.zip
        # API Gateway
        ApiFullResourcePath: "/hotels"
        ApiHttpMethod: "GET"
        ApiCognitoAuthorizer: false

    lambda-get-hotel-room-availability:
      Extends: lambda-service
      StackName: get-hotel-room-availability-function
      Parameters:
        Environment: test
        LambdaName: get-hotel-room-availability
        LambdaHandler: "com.test.booking.api.entrypoints.GetHotelAvailabilityHandler::handleRequest"
        LambdaZipS3Key: hotels.zip
        # API Gateway
        ApiFullResourcePath: "/hotels/rooms/room_id/availability"
        ApiHttpMethod: "GET"
        ApiCognitoAuthorizer: false

    lambda-get-user-reservations:
      Extends: lambda-service
      StackName: get-user-reservations-function
      Parameters:
        Environment: test
        LambdaName: get-user-reservations
        LambdaHandler: "com.test.booking.api.entrypoints.GetReservationsHandler::handleRequest"
        LambdaZipS3Key: reservations.zip
        # API Gateway
        ApiFullResourcePath: "/reservations"
        ApiHttpMethod: "GET"
        ApiProxyIntegration: false

    lambda-place-reservation:
      Extends: lambda-service
      StackName: place-reservation-function
      Parameters:
        Environment: test
        LambdaName: place-reservation
        LambdaHandler: "com.test.booking.api.entrypoints.PlaceReservationHandler::handleRequest"
        LambdaZipS3Key: reservations.zip
        # API Gateway
        ApiFullResourcePath: "/reservations"
        ApiHttpMethod: "POST"
        ApiProxyIntegration: false

    lambda-modify-reservation:
      Extends: lambda-service
      StackName: modify-reservation-function
      Parameters:
        Environment: test
        LambdaName: modify-reservation
        LambdaHandler: "com.test.booking.api.entrypoints.ModifyReservationHandler::handleRequest"
        LambdaZipS3Key: reservations.zip
        # API Gateway
        ApiFullResourcePath: "/reservations/reservation_id"
        ApiHttpMethod: "PUT"
        ApiProxyIntegration: false

    lambda-cancel-reservation:
      Extends: lambda-service
      StackName: cancel-reservation-function
      Parameters:
        Environment: test
        LambdaName: cancel-reservation
        LambdaHandler: "com.test.booking.api.entrypoints.CancelReservationHandler::handleRequest"
        LambdaZipS3Key: reservations.zip
        # API Gateway
        ApiFullResourcePath: "/reservations/reservation_id/cancel"
        ApiHttpMethod: "PUT"
        ApiProxyIntegration: false

    #--------------------------------------------------------------
    #---------------------- ADMIN RESOURCES ----------------------
    #--------------------------------------------------------------

    lambda-admin-get-reservations:
      Extends: lambda-service
      StackName: admin-get-reservations-function
      Parameters:
        Environment: test
        LambdaName: admin-get-reservations
        LambdaHandler: "com.test.booking.api.entrypoints.GetReservationsHandler::handleRequest"
        LambdaZipS3Key: reservations.zip
        # API Gateway
        APIAccess: private
        ApiFullResourcePath: "/reservations"
        ApiHttpMethod: "GET"
        ApiProxyIntegration: false
